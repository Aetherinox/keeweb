# #
#   @type               github workflow
#   @author             Aetherinox
#   @url                https://github.com/Aetherinox
#   @usage              syncs main/package folder with branch docker/keeweb
#   @secrets            secrets.ADMINSERV_GPG_KEY_ASC                   gpg private key (armored) | BEGIN PGP PRIVATE KEY BLOCK
#                       secrets.ADMINSERV_GPG_PASSPHRASE                gpg private key passphrase
#                       secrets.IMAGE_GHCR_TOKEN                        github personal access token (classic) with package:write permission
# #

name: "üîÄ Sync ‚Ä∫ Docker ‚Ä∫ Github"
run-name: "üîÄ Sync ‚Ä∫ Docker ‚Ä∫ Github"

# #
#   Triggers
# #

on:

    # #
    #   Trigger ‚Ä∫ Workflow Dispatch
    #
    #   If any values are not provided, will use fallback env variable
    # #

    workflow_dispatch:
        inputs:

            # #
            #   Image Name
            #
            #   used in github image path
            #       ghcr.io/${{ env.IMAGE_AUTHOR }}/${{ env.IMAGE_NAME }}
            # #

            IMAGE_NAME:
                description:  "üì¶ Image Name"
                required:     true
                default:      'keeweb'
                type:         string

            # #
            #   Image Author
            #
            #   used in github image path
            #       ghcr.io/${{ env.IMAGE_AUTHOR }}/${{ env.IMAGE_NAME }}
            # #

            IMAGE_AUTHOR:
                description:  "ü™™ Image Author"
                required:     true
                default:      'keeweb'
                type:         string

            # #
            #   Image Version
            #
            #   used to create new release tag, and add version to docker image name
            # #

            IMAGE_VERSION:
                description:  "üè∑Ô∏è Image Version"
                required:     true
                default:      '1.19.0'
                type:         string

            # #
            #   Image ghcr username
            #
            #   this is the user to sign into ghcr as.
            # #

            IMAGE_GHCR_USERNAME:
                description:  "ü™™ ghcr.io Username"
                required:     true
                default:      'keeweb'
                type:         string

            # #
            #   true:     runs all actions, even ones not scheduled
            #   false:    only scheduled tasks will run
            # #

            PRINT_ONLY:
                description:  "üìë Print Debugs Only"
                required:     true
                default:      false
                type:         boolean

            # #
            #   ENABLE:       released version will be marked as beta and receive beta tag for docker
            #   DISABLE:      release version will be marked as stable / normal release
            # #

            DEV_RELEASE:
                description:  "üß™ Development Release"
                required:     true
                default:      false
                type:         boolean

    # #
    #   Trigger ‚Ä∫ Push
    # #

    push:
        tags:
            - '*'

# #
#   Environment Vars
# #

env:
    IMAGE_NAME:           ${{ github.event.inputs.IMAGE_NAME || 'keeweb' }}
    IMAGE_AUTHOR:         ${{ github.event.inputs.IMAGE_AUTHOR || 'keeweb' }}
    IMAGE_VERSION:        ${{ github.event.inputs.IMAGE_VERSION || '1.19.0' }}
    IMAGE_GHCR_USERNAME:  ${{ github.event.inputs.IMAGE_GHCR_USERNAME || 'keeweb' }}
    BOT_NAME_1:           EuropaServ
    BOT_NAME_DEPENDABOT:  dependabot[bot]
    
# #
#   Jobs
#
#   The way pushed docker containers on Github work, the most recent image built goes at the top.
#   We will use the order below which builds the :latest image last so that it appears at the very
#   top of the packages page.
# #

jobs:

    # #
    #   Job ‚Ä∫ Create Tag
    # #

    job-docker-release-tags-create:
        name: >-
          üì¶ Release ‚Ä∫ Sync
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            attestations: write
            id-token: write
        steps:

            # #
            #   Release ‚Ä∫ Sync ‚Ä∫ Start
            # #

            - name: "‚úÖ Start"
              id: task_ctags_start
              run: |
                  echo "Starting branch sync"

            # #
            #   Release ‚Ä∫ Sync ‚Ä∫ Checkout
            # #

            - name: "‚òëÔ∏è Checkout"
              id: task_ctags_checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   Release ‚Ä∫ Sync ‚Ä∫ Check Permissions
            # #

            - name: 'Check Permissions'
              uses: andstor/copycat-action@v3
              with:
                personal_token: ${{ secrets.SELF_TOKEN_CL }}
                src_path: /.
                dst_path: /package/docker/
                dst_owner: aetherinox
                dst_repo_name: keeweb
                src_branch: docker/keeweb
                dst_branch: main
                commit_message: "Test"
                exclude: |
                    /package/docker/.github/*
                    /package/docker/docs/*
                    /package/docker/.editorconfig
                    /package/docker/.gitignore
                    /package/docker/.prettierignore
                    /package/docker/LICENSE
                    /package/docker/README.md