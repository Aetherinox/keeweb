# #
#   @type               github workflow
#   @author             Aetherinox
#   @url                https://github.com/Aetherinox
#   @usage              originally, Keeweb's docker files were hosted in the main branch within the folder /package/docker/*
#                       with the new setup, the Keeweb docker files are stored in a separate branch from main called `docker/keeweb`.
#                       this workflow copies the required docker files from the new branch docker/keeweb, and brings them over to the main branch
#                       and places them within the original subfolder `package/docker/*`
#   @secrets            secrets.ADMINSERV_GPG_KEY_ASC                   gpg private key (armored) | BEGIN PGP PRIVATE KEY BLOCK
#                       secrets.ADMINSERV_GPG_PASSPHRASE                gpg private key passphrase
#                       secrets.IMAGE_GHCR_TOKEN                        github personal access token (classic) with package:write permission
# #

name: "🔀 Sync › Docker › Github"
run-name: "🔀 Sync › Docker › Github"

# #
#   Triggers
# #

on:

    # #
    #   Trigger › Workflow Dispatch
    #
    #   If any values are not provided, will use fallback env variable
    # #

    workflow_dispatch:
        inputs:

            # #
            #   Image Name
            #
            #   used in github image path
            #       ghcr.io/${{ env.IMAGE_AUTHOR }}/${{ env.IMAGE_NAME }}
            # #

            IMAGE_NAME:
                description:  "📦 Image Name"
                required:     true
                default:      'keeweb'
                type:         string

            # #
            #   true:     runs all actions, even ones not scheduled
            #   false:    only scheduled tasks will run
            # #

            PRINT_ONLY:
                description:  "📑 Print Debugs Only"
                required:     true
                default:      false
                type:         boolean

    # #
    #   Trigger › Push
    # #

    push:
        tags:
            - '*'

# #
#   Environment Vars
# #

env:
    IMAGE_NAME:           ${{ github.event.inputs.IMAGE_NAME || 'keeweb' }}
    IMAGE_AUTHOR:         ${{ github.event.inputs.IMAGE_AUTHOR || 'keeweb' }}
    IMAGE_VERSION:        ${{ github.event.inputs.IMAGE_VERSION || '1.19.0' }}
    IMAGE_GHCR_USERNAME:  ${{ github.event.inputs.IMAGE_GHCR_USERNAME || 'keeweb' }}
    BOT_NAME_1:           EuropaServ
    BOT_NAME_DEPENDABOT:  dependabot[bot]
    
# #
#   Jobs
#
#   The way pushed docker containers on Github work, the most recent image built goes at the top.
#   We will use the order below which builds the :latest image last so that it appears at the very
#   top of the packages page.
# #

jobs:

    # #
    #   Job › Create Tag
    # #

    job-docker-release-tags-create:
        name: >-
          📦 Release › Sync
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            attestations: write
            id-token: write
        steps:

            # #
            #   Sync › Start
            # #

            - name: "✅ Start"
              id: task_ctags_start
              run: |
                  echo "Starting branch sync"

            # #
            #   Sync › Checkout
            # #

            - name: "☑️ Checkout"
              id: task_ctags_checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   Sync › Copy Dockerfiles to Main branch
            #
            #   this action copies all the required docker files from the docker/keeweb branch, over to 
            #   the main branch within the subfolder `package/docker/*`
            # #

            - name: 'Pull Docker Files'
              run: |
                  git config --global pager.diff false
                  git config --global advice.detachedHead false
                  git checkout origin/main
                  git --work-tree=package/docker checkout origin/docker/keeweb -- root Dockerfile*

            # #
            #   Sync › Show Differences
            # 
            #   this is just a debugging step, it shows all the files pending commit that will be committed
            # #

            - name: 'View Differences'
              run: |
                  git diff --name-only HEAD

            # #
            #   Sync › Precommit
            #
            #   define the date/time and the commit message
            # #

            - name: "📦 Commit › Pre-commit"
              id: task_commit_pre
              run: |
                  now=$(date -u '+%m/%d/%Y %H:%M')
                  commit_label="Sync" >> $GITHUB_ENV
                  commit_message="\`️️🔄 $commit_label 🔄\` \`$now UTC\`" >> $GITHUB_ENV
                  echo "COMMIT_MESSAGE=$(echo $commit_message)" >> $GITHUB_ENV
                  echo "NOW=$(echo $now)" >> $GITHUB_ENV

            # #
            #   Sync › GPG Key
            #
            #   this step is required so that you can sign commits in the last step
            #       stefanzweifel/git-auto-commit-action@v5
            # #

            - name: "📦 Commit › GPG Key"
              id: task_sync_commit_gpg
              uses: crazy-max/ghaction-import-gpg@v6
              with:
                  gpg_private_key: ${{ secrets.ADMINSERV_GPG_KEY_ASC }}
                  passphrase: ${{ secrets.ADMINSERV_GPG_PASSPHRASE }}
                  git_user_signingkey: true
                  git_commit_gpgsign: true

            # #
            #   Sync › Debug
            # #

            - name: "🪪 Debug › Print"
              id: task_release_gh_print
              run: |
                echo "github.actor.......... ${{ github.actor }}"
                echo "github.ref ........... ${{ github.ref }}"
                echo "github.event_name .... ${{ github.event_name }}"
                echo "inputs.PRINT_ONLY .... ${{ inputs.PRINT_ONLY }}"
                echo "env.COMMIT_MESSAGE ... (echo ${{ env.COMMIT_MESSAGE }})"

            # #
            #   Sync › Commit
            # 
            #   commits the pending changes to the main branch
            # #

            - uses: stefanzweifel/git-auto-commit-action@v5
              if: ( github.event_name == 'workflow_dispatch' && inputs.PRINT_ONLY == false ) || ( github.event_name == 'push' )
              with:
                  commit_message: ${{ env.COMMIT_MESSAGE }}
                  commit_author: "${{ steps.task_sync_commit_gpg.outputs.name }} <${{ steps.task_sync_commit_gpg.outputs.email }}>"
                  commit_user_name: ${{ steps.task_sync_commit_gpg.outputs.name }}
                  commit_user_email: ${{ steps.task_sync_commit_gpg.outputs.email }}
                  branch: main
                  add_options: '-u'